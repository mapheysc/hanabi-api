version: '3'

services:
  mongo:
   container_name: mongo_db
   image: mongo:latest
   restart: always
   environment:
     MONGO_INITDB_ROOT_USERNAME: root
     MONGO_INITDB_ROOT_PASSWORD: example
   networks:
     - internal_database
   ports:
     - 27017:27017

  hanabi:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: hanabi
    depends_on:
      - mongo
    labels:
      - traefik.backend=hanabi
      - traefik.frontend.rule=Host:hanabi.${HOSTNAME}
      - traefik.docker.network=traefik_proxy
      - traefik.port=5000
      - traefik.enable=true
      # - traefik.backend=hanabi
      # - traefik.frontend.rule=Host:api.${HOSTNAME}
      # - traefik.loadbalancer2.frontend.rule=Host:api.${HOSTNAME}; PathPrefix:/socket.io
      # - traefik.port=5000
      # - traefik.enable=true
      # - traefik.docker.network=traefik_proxy
    networks:
      - internal_database
      - traefik_proxy
    # ports:
    #   - 5000:5000

  traefik:
    container_name: traefik
    image: traefik:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${TRAEFIK_TOML_PATH}:/traefik.toml
      - ${TRAEFIK_LOG_PATH}:/logs
      - ${TRAEFIK_CERT_PATH}:/cert.crt
      - ${TRAEFIK_KEY_PATH}:/cert.key
    ports:
      - 80:80
      - 443:443
    networks:
      - traefik_proxy
    command: --docker --traefikLog.filePath="/logs/traefik.log" ${TRAEFIK_LOG_LEVEL} --traefikLog.format="json"
    labels:
      - traefik.backend=traefik
      - traefik.frontend.rule=Host:traefik.${HOSTNAME}
      - traefik.docker.network=traefik_proxy
      - traefik.port=8080
      - traefik.enable=true

  portainer:
      image: portainer/portainer
      container_name: portainer
      restart: always
      environment:
        - PGID=1000
        - PUID=1000
      #Automatically choose 'Manage the Docker instance where Portainer is running' by adding <--host=unix:///var/run/docker.sock> to the command
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ${PORTAINER_DATA_PATH}:/data
      networks:
        - traefik_proxy
      ports:
        - 9000:9000
      labels:
        - traefik.backend=portainer
        - traefik.frontend.rule=Host:portainer.${HOSTNAME}
        - traefik.docker.network=traefik_proxy
        - traefik.port=9000
        - traefik.enable=true

networks:
  traefik_proxy:
  internal_database:
