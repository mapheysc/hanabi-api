version: '3'

services:
  mongo:
    container_name: mongo
    image: mongo
    restart: always

  hanabi:
    build:
      context: ./
      dockerfile: ./Dockerfile
    volumes:
      - ./:/usr/src/app

  nginx:
    container_name: load-balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - hanabi
    labels:
      - traefik.backend=load-balancer
      - traefik.loadbalancer1.frontend.rule=Host:${HOSTNAME}; PathPrefixStrip:/api/v1
      - traefik.loadbalancer2.frontend.rule=Host:${HOSTNAME}; PathPrefix:/socket.io
      - traefik.docker.network=docker_traefik_proxy
      - traefik.port=4000
      - traefik.enable=true
    networks:
      - load_balancing
      - traefik_proxy

  traefik:
    container_name: traefik
    image: traefik:1.7-alpine
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${TRAEFIK_TOML_PATH}:/traefik.toml
      - ${TRAEFIK_LOG_PATH}:/logs
      - ${TRAEFIK_CERT_PATH}:/cert.crt
      - ${TRAEFIK_KEY_PATH}:/cert.key
    ports:
      - 80:80
      - 443:443
    networks:
      - traefik_proxy
    command: --docker --traefikLog.filePath="/logs/traefik.log" ${TRAEFIK_LOG_LEVEL} --traefikLog.format="json"
    labels:
      - traefik.backend=traefik
      - traefik.frontend.rule=Host:${HOSTNAME}; PathPrefixStrip:/traefik
      - traefik.docker.network=docker_traefik_proxy
      - traefik.port=8080
      - traefik.enable=true
      
networks:
  traefik_proxy:
  load_balancing: